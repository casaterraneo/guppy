@page "/tris"
@attribute [Authorize]

@using System.Linq

<h3 class="mb-4">Tris (Tic Tac Toe)</h3>

<div class="container">
    <div class="row justify-content-center">
        <div class="col-auto">
            <div class="d-grid gap-2">
                @for (int row = 0; row < 3; row++)
                {
                    <div class="btn-group">
                        @for (int col = 0; col < 3; col++)
                        {
                            int idx = row * 3 + col;
                            <button class="btn btn-outline-primary btn-lg"
                                    style="width: 70px; height: 70px; font-size:2rem;"
                                    disabled="@(!string.IsNullOrEmpty(board[idx]) || !string.IsNullOrEmpty(winner))"
                                    @onclick="() => MakeMove(idx)">
                                @board[idx]
                            </button>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="row mt-4 justify-content-center">
        <div class="col-auto">
            @if (!string.IsNullOrEmpty(winner))
            {
                <div class="alert alert-success">
                    @winner
                </div>
            }
            else if (board.All(cell => !string.IsNullOrEmpty(cell)))
            {
                <div class="alert alert-warning">
                    Pareggio!
                </div>
            }
            <button class="btn btn-secondary mt-2" @onclick="Reset">Reset</button>
        </div>
    </div>
</div>

@code {
    // Stato della griglia (3x3)
    string[] board = new string[9];
    // Turno attuale: "X" o "O"
    string currentPlayer = "X";
    // Vincitore (null se la partita Ã¨ in corso)
    string winner;

    void MakeMove(int idx)
    {
        if (!string.IsNullOrEmpty(board[idx]) || !string.IsNullOrEmpty(winner))
            return;

        board[idx] = currentPlayer;
        if (CheckWin(currentPlayer))
        {
            winner = $"Ha vinto {currentPlayer}!";
        }
        else
        {
            currentPlayer = currentPlayer == "X" ? "O" : "X";
        }
    }

    bool CheckWin(string player)
    {
        int[,] wins = new int[,] {
            {0,1,2}, {3,4,5}, {6,7,8}, // righe
            {0,3,6}, {1,4,7}, {2,5,8}, // colonne
            {0,4,8}, {2,4,6}           // diagonali
        };
        for (int i = 0; i < wins.GetLength(0); i++)
        {
            if (board[wins[i,0]] == player && board[wins[i,1]] == player && board[wins[i,2]] == player)
                return true;
        }
        return false;
    }

    void Reset()
    {
        board = new string[9];
        winner = null;
        currentPlayer = "X";
    }
}
